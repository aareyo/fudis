{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "FudisDialog",
            "id": "injectable-FudisDialog-6d46469357405c81b975703ab46791beef7af5110187d3e56de1ee4e8fc5790e6cb2b0bdf2e9e382a525c742c040bf575d45fec59e929adfe86372e83aa967cb",
            "file": "projects/ngx-fudis/src/lib/components/dialog/dialog.ts",
            "properties": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createConfig",
                    "args": [
                        {
                            "name": "userConfig",
                            "type": "MatDialogConfig<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "MatDialogConfig<any>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMerge consumer's config with ours.\n",
                    "description": "<p>Merge consumer&#39;s config with ours.</p>\n",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "userConfig",
                            "type": "MatDialogConfig<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "component",
                            "type": "ComponentType<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "MatDialogConfig<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "MatDialogRef<T, R>",
                    "typeParameters": [
                        "T",
                        "R"
                    ],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen new dialog.\ninto `component`.\n",
                    "description": "<p>Open new dialog.\ninto <code>component</code>.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 308,
                                "end": 317,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "component"
                            },
                            "type": "ComponentType<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 302,
                                "end": 307,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component to show in the dialog.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 363,
                                "end": 369,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "config"
                            },
                            "type": "MatDialogConfig<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 357,
                                "end": 362,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Optional configuration object. Use the <code>data</code> field to inject data\ninto <code>component</code>.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 466,
                                "end": 473,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Reference to the dialog that was opened.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ComponentType } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\n\n@Injectable()\nexport class FudisDialog {\n  constructor(public dialog: MatDialog) {}\n\n  /**\n   * Open new dialog.\n   * @param component Component to show in the dialog.\n   * @param config Optional configuration object. Use the `data` field to inject data\n   * into `component`.\n   * @returns Reference to the dialog that was opened.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  open<T, R = any>(component: ComponentType<T>, config?: MatDialogConfig<any>): MatDialogRef<T, R> {\n    const dialogRef = this.dialog.open(component, FudisDialog.createConfig());\n    return dialogRef;\n  }\n\n  /**\n   * Merge consumer's config with ours.\n   */\n  private static createConfig(userConfig: MatDialogConfig<any> = {}): MatDialogConfig<any> {\n    const overridableOptions = { hasBackdrop: true };\n    const forcedOptions = { panelClass: 'fudis-dialog-panel' };\n    return { ...overridableOptions, ...userConfig, ...forcedOptions };\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "FudisDialogActionsDirective",
            "id": "directive-FudisDialogActionsDirective-cff6482db0889c061d7fcd7581ad621f8336e8ca7eec94ad48aaf584b82b061b2706e48b46dfbd88084cc1c6b3ee8d63e8bbfa0849d2beb7d64b6338cbd4f12f",
            "file": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-title]',\n})\nexport class FudisDialogTitleDirective extends MatDialogTitle {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-content',\n})\nexport class FudisDialogContentDirective extends MatDialogContent {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-actions',\n})\nexport class FudisDialogActionsDirective extends MatDialogActions {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-close]',\n})\nexport class FudisDialogCloseDirective extends MatDialogClose {}\n",
            "selector": "fudis-dialog-actions",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": "MatDialogActions"
        },
        {
            "name": "FudisDialogCloseDirective",
            "id": "directive-FudisDialogCloseDirective-cff6482db0889c061d7fcd7581ad621f8336e8ca7eec94ad48aaf584b82b061b2706e48b46dfbd88084cc1c6b3ee8d63e8bbfa0849d2beb7d64b6338cbd4f12f",
            "file": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-title]',\n})\nexport class FudisDialogTitleDirective extends MatDialogTitle {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-content',\n})\nexport class FudisDialogContentDirective extends MatDialogContent {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-actions',\n})\nexport class FudisDialogActionsDirective extends MatDialogActions {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-close]',\n})\nexport class FudisDialogCloseDirective extends MatDialogClose {}\n",
            "selector": "[fudis-dialog-close]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": "MatDialogClose"
        },
        {
            "name": "FudisDialogContentDirective",
            "id": "directive-FudisDialogContentDirective-cff6482db0889c061d7fcd7581ad621f8336e8ca7eec94ad48aaf584b82b061b2706e48b46dfbd88084cc1c6b3ee8d63e8bbfa0849d2beb7d64b6338cbd4f12f",
            "file": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-title]',\n})\nexport class FudisDialogTitleDirective extends MatDialogTitle {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-content',\n})\nexport class FudisDialogContentDirective extends MatDialogContent {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-actions',\n})\nexport class FudisDialogActionsDirective extends MatDialogActions {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-close]',\n})\nexport class FudisDialogCloseDirective extends MatDialogClose {}\n",
            "selector": "fudis-dialog-content",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": "MatDialogContent"
        },
        {
            "name": "FudisDialogTitleDirective",
            "id": "directive-FudisDialogTitleDirective-cff6482db0889c061d7fcd7581ad621f8336e8ca7eec94ad48aaf584b82b061b2706e48b46dfbd88084cc1c6b3ee8d63e8bbfa0849d2beb7d64b6338cbd4f12f",
            "file": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-title]',\n})\nexport class FudisDialogTitleDirective extends MatDialogTitle {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-content',\n})\nexport class FudisDialogContentDirective extends MatDialogContent {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'fudis-dialog-actions',\n})\nexport class FudisDialogActionsDirective extends MatDialogActions {}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[fudis-dialog-close]',\n})\nexport class FudisDialogCloseDirective extends MatDialogClose {}\n",
            "selector": "[fudis-dialog-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": "MatDialogTitle"
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-904c55f4cb9de76a43f5190245cfa4a2a96da81a52498bc7e0755d20457fe37c67a1ed7e618fa2149211b8bc097c26f5667048d3288bac9cd800cd7b287c21ac",
            "file": "projects/dev/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\" class=\"content\">\n  <h1>\n    Welcome to {{title}}!\n  </h1>\n  <button mat-button>Nappi</button>\n  <app-dialog-test></app-dialog-test>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'dev'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <!--The content below is only a placeholder and can be replaced.-->\n    <div style=\"text-align:center\" class=\"content\">\n      <h1>\n        Welcome to {{title}}!\n      </h1>\n      <button mat-button>Nappi</button>\n      <app-dialog-test></app-dialog-test>\n    </div>\n  `,\n  styles: [],\n})\nexport default class AppComponent {\n  title = 'dev';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-657553f159566e38dfa61bbba788b7e82b7970dd419500315427ecd76a200d4b461e9e26a9276be7217f25e7451ddbf6ac1b3434feca9f7476be1503ad0fcce8",
            "file": "projects/ngx-fudis/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 630,
                            "end": 643,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 631,
                                "end": 639,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component, Input, Output, EventEmitter,\n} from '@angular/core';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'storybook-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n    primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n    backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n    size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n    label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 45
                    }
                }
            },
            "templateData": "<button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }} hello fren, I am just example button!\n</button>\n"
        },
        {
            "name": "DialogTestComponent",
            "id": "component-DialogTestComponent-0fc6c4d5bfea969eb322887671de1455c73cfd86591f958a1444bc056128e1845150fd7c33613ac218c40ece1a9bcc2176ea1fd86ced45bb0e7c01ceb8dc650e",
            "file": "projects/dev/src/app/dialog-test/dialog-test.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-test",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-button (click)=\"openDialog()\">Open dialog</button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FudisDialog",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FudisDialog } from 'ngx-fudis';\nimport { DialogTestContentComponent } from './dialog-test-content/dialog-test-content.component';\n\n@Component({\n  selector: 'app-dialog-test',\n  template: '<button mat-button (click)=\"openDialog()\">Open dialog</button>',\n  styles: [],\n})\nexport class DialogTestComponent {\n  constructor(public dialog: FudisDialog) {}\n\n  openDialog() {\n    const ref = this.dialog.open(DialogTestContentComponent);\n    ref.afterClosed().subscribe((res: any) => {\n      console.log(res);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "FudisDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "FudisDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DialogTestContentComponent",
            "id": "component-DialogTestContentComponent-1d2dc184c4c1fa33728c28d074d357fc42244cd248a08a1f1480f390ba42a3f95f7b9328400e0cd7d02b8dd4f1313cc9edc86c3513fb5651f15ee8389b3f73ca",
            "file": "projects/dev/src/app/dialog-test/dialog-test-content/dialog-test-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-test-content",
            "styleUrls": [],
            "styles": [],
            "template": "<h2 fudis-dialog-title>Otsikko jee</h2>\n<fudis-dialog-content>\n  <p>dialog-test-content works!</p>\n</fudis-dialog-content>\n<fudis-dialog-actions>\n  <button mat-button fudis-dialog-close>Cancel</button>\n  <button mat-button cdkFocusInitial>OK</button>\n</fudis-dialog-actions>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-test-content',\n  template: `\n    <h2 fudis-dialog-title>Otsikko jee</h2>\n    <fudis-dialog-content>\n      <p>dialog-test-content works!</p>\n    </fudis-dialog-content>\n    <fudis-dialog-actions>\n      <button mat-button fudis-dialog-close>Cancel</button>\n      <button mat-button cdkFocusInitial>OK</button>\n    </fudis-dialog-actions>\n  `,\n  styles: [],\n})\nexport class DialogTestContentComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-1d83181c23abe9367b3548456739321a3509036d42253c87f67e3c6ac8944f54e37fa7ad6854a890159f4938d0cd2aad47b0ae9960c163e774e68a9a333fdde7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/dev/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { NgxFudisModule } from 'ngx-fudis';\nimport AppComponent from './app.component';\nimport { DialogTestComponent } from './dialog-test/dialog-test.component';\nimport { DialogTestContentComponent } from './dialog-test/dialog-test-content/dialog-test-content.component';\n\n@NgModule({\n  declarations: [AppComponent, DialogTestComponent, DialogTestContentComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxFudisModule,\n    MatButtonModule,\n    MatDialogModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "DialogTestComponent"
                        },
                        {
                            "name": "DialogTestContentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NgxFudisModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NgxFudisModule",
            "id": "module-NgxFudisModule-73722da2129433547ae515eed3b6cbd07a8c605ff7095b7dbda3c4ea956ee1da1c7ada9b71c3a8cf47634abf8299ec12e0d88bfd110d9d04fa012bf88311a221",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-fudis/src/lib/ngx-fudis.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {\n  FudisDialogActionsDirective,\n  FudisDialogCloseDirective,\n  FudisDialogContentDirective,\n  FudisDialogTitleDirective,\n} from './components/dialog/dialog-directives';\nimport { FudisDialog } from './components/dialog/dialog';\nimport { ButtonComponent } from './components/button/button.component';\n\n@NgModule({\n  declarations: [\n    FudisDialogTitleDirective,\n    FudisDialogActionsDirective,\n    FudisDialogContentDirective,\n    FudisDialogCloseDirective,\n    ButtonComponent,\n  ],\n  imports: [MatDialogModule, CommonModule],\n  exports: [\n    FudisDialogTitleDirective,\n    FudisDialogActionsDirective,\n    FudisDialogContentDirective,\n    FudisDialogCloseDirective,\n    ButtonComponent,\n  ],\n  providers: [FudisDialog],\n})\nexport class NgxFudisModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "FudisDialog"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "FudisDialogActionsDirective"
                        },
                        {
                            "name": "FudisDialogCloseDirective"
                        },
                        {
                            "name": "FudisDialogContentDirective"
                        },
                        {
                            "name": "FudisDialogTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "FudisDialogActionsDirective"
                        },
                        {
                            "name": "FudisDialogCloseDirective"
                        },
                        {
                            "name": "FudisDialogContentDirective"
                        },
                        {
                            "name": "FudisDialogTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dev/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dev/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "ngAdd",
                "file": "projects/ngx-fudis/schematics/ng-add/index.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Rule"
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-fudis/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/dev/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dev/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "projects/dev/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dev/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "projects/ngx-fudis/src/lib/components/button/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ngx-fudis/schematics/ng-add/index.ts": [
                {
                    "name": "ngAdd",
                    "file": "projects/ngx-fudis/schematics/ng-add/index.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Rule"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "projects/dev/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/dev/src/app/dialog-test/dialog-test-content/dialog-test-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogTestContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dev/src/app/dialog-test/dialog-test.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogTestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/dev/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dev/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/schematics/ng-add/index.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ngAdd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FudisDialogActionsDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FudisDialogCloseDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FudisDialogContentDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/dialog/dialog-directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FudisDialogTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/lib/components/dialog/dialog.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FudisDialog",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "projects/ngx-fudis/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-fudis/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}