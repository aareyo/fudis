@use '../../../foundations/spacing/tokens.scss' as spacing;
@use '../../../foundations/borders/mixins.scss' as borders;
@use '../../../foundations/typography/mixins.scss' as typography;
@use '../../../foundations/focus/mixins.scss' as focus;
@use '../../../foundations/colors/tokens.scss' as colors;
@use '../../../foundations/colors/mixins.scss' as colorMixins;

.fudis-autocomplete {
	max-width: calc(23 * spacing.$spacing-sm);

	&__lg {
		width: 100%;
	}

	&__md {
		width: calc(14 * spacing.$spacing-sm);
	}

	&__sm {
		max-width: calc(10 * spacing.$spacing-sm);
	}

	&__input-wrapper {
		position: relative;
	}

	&__input {
		@include borders.border('1px', 'solid', 'gray-middle');
		@include typography.text-field-input;
		@include borders.border-radius('2px');

		box-sizing: border-box;
		padding: spacing.$spacing-xxs spacing.$spacing-sm;
		width: 100%;
		height: spacing.$spacing-xl;

		&:focus {
			@include focus.focus-form-field;
		}

		&__icon {
			@include colorMixins.bg-color('white');

			position: absolute;
			top: 50%;
			right: spacing.$spacing-xxs;
			transform: translateY(-50%);

			// Necessary for passing the chevron icon click and hit the input to open dropdown
			&[ng-reflect-icon='chevron'] {
				pointer-events: none;
			}

			&--disabled {
				@include colorMixins.bg-color('transparent');
			}
		}

		&--invalid {
			border-color: colors.$color-red;
		}

		&--disabled {
			@include borders.border('1px', 'dashed', 'gray-middle');
			@include colorMixins.bg-color('gray-extra-light');

			cursor: default;
		}
	}

	&__viewport {
		&__lg {
			height: calc(14 * spacing.$spacing-sm);
		}

		&__md {
			height: calc(14 * spacing.$spacing-sm);
		}

		&__sm {
			height: calc(10 * spacing.$spacing-sm);
		}

		&__item {
			height: spacing.$spacing-xl;
		}
	}
}
