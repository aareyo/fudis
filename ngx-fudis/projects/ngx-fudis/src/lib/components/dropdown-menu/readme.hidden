import { ArgTypes, Meta, Canvas } from "@storybook/blocks";
import { linkTo } from "@storybook/addon-links";
import { DropdownMenuComponent } from "./dropdown-menu.component";
import * as DropdownMenuStories from "./dropdown-menu.stories.ts";

<Meta title="Components/Dropdown Menu" />

# Dropdown Menu

Dropdown Menu is assembled with `Button`, `DropdownMenu` and `DropdownMenuItem` components and it has certain guidelines to follow in order to work. See code example below.

## Examples

<Canvas of={DropdownMenuStories.DropdownMenu}></Canvas>

### Code Example

**NOTE**: All Button properties are given in this example as needed, just modify `label` according to your needs.

```
<fudis-button
	[label]="'Menu'"
	[labelHidden]="true"
	[size]="'small'"
	[variant]="'secondary'"
	[icon]="'three-dots'"
	[asMenuButton]="true">
	<fudis-dropdown-menu>
		<fudis-dropdown-menu-item [label]="'Item 1'" (handleClick)="doSomething($event)"></fudis-dropdown-menu-item>
		<fudis-dropdown-menu-item [label]="'Item 2'" [disabled]="true"></fudis-dropdown-menu-item>
	</fudis-dropdown-menu>
</fudis-button>
```

#### Useful info

Dropdown Menu button is often designed to be found on the right side of the view. Thus, default behaviour of the menu is to open and align itself on the left side of the button. Optionally menu can be aligned to open on the right side `<fudis-dropdown-menu [align]="'right'"> ... </fudis-dropdown-menu>`

### Accessibility

- Button uses primary-color variable (`--fudis-color-primary`) which is set in the root of the application. Make sure the application's primary-color contrast ratio meets WCAG AA and AAA levels.
- Button has visible focus state.
- Button click can be triggered with mouse as well as keyboard <code>enter</code> and <code>space</code> key.
- Dropdown menu items can be toggled with <code>arrow down</code> and <code>arrow up</code> keys or <code>tab</code>.
  - Dropdown menu item click can be triggered with mouse as well as keyboard <code>enter</code> and <code>space</code> key.
  - Disabled menu items are focusable. State is communicated for screen reader.

### Related components

- [Button](/docs/components-button--documentation)
- [Icon](/docs/components-icon--documentation)

## Properties

<ArgTypes of={DropdownMenuComponent} />
