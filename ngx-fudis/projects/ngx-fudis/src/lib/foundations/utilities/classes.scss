@use "./mixins.scss" as mixins;
@use "../spacing/tokens.scss" as spacing;
@use "../borders/mixins.scss" as border;
@use "../colors/mixins.scss" as colors;

.fudis-visually-hidden {
  @include mixins.visually-hidden;
}

.fudis-box-reset {
  @include mixins.box-reset;
}

.fudis-hr {
  @include mixins.horizontal-rule;
}

// Invalid and disabled state styles for input elemenets
/* stylelint-disable-next-line selector-no-qualifying-type */
input.fudis-form-input {
  /* stylelint-disable-next-line selector-no-qualifying-type */
  &--invalid[aria-invalid="true"] {
    @include border.border("1px", "solid", "red");
  }

  &--disabled {
    @include border.border("1px", "dashed", "gray-middle");
    @include colors.bg-color("gray-extra-light");

    cursor: default;
  }

  // TODO: Unifiy below and above --disabled styles for inputs to work universally
  // This is done for text-input, otherwise its own styles overwrite border styles
  /* stylelint-disable-next-line selector-no-qualifying-type */
  &--disabled[aria-disabled="true"] {
    @include border.border("1px", "dashed", "gray-middle");
  }
}

// Invalid and disabled state styles for text-area elements
/* stylelint-disable-next-line selector-no-qualifying-type */
textarea.fudis-form-input {
  /* stylelint-disable-next-line selector-no-qualifying-type */
  &--invalid[aria-invalid="true"] {
    @include border.border("1px", "solid", "red");
  }

  &--disabled {
    @include border.border("1px", "dashed", "gray-middle");
    @include colors.bg-color("gray-extra-light");

    cursor: default;
  }
}

.fudis-input-size {
  &__xs {
    max-width: spacing.$spacing-input-xs;
  }

  &__sm {
    max-width: spacing.$spacing-input-sm;
  }

  &__md {
    max-width: spacing.$spacing-input-md;
  }

  &__lg {
    max-width: spacing.$spacing-input-lg;
  }
}
